#!/usr/bin/env bash
# Splinter (https://github.com/duolingo/splinter)

set -efu

# Collect arguments
readonly rules_file="${1:-}"
if [[ -z ${rules_file} || ${rules_file} == '-h' || ${rules_file} == '--help' ]]; then
  echo 'Splinter is a simple, pattern-based linter: https://github.com/duolingo/splinter'
  exit 1
fi
shift
readonly src_paths=("${@:-.}")

# Parse rule file
expecting_rule_message=true
messages=()
regexes=()
while read -r line; do
  if [[ ${line} =~ ^\ *$ ]]; then
    # Line contains no non-space chars
    :
  elif [[ ${line} =~ ^# ]]; then
    # Line is a comment
    :
  elif [[ ${expecting_rule_message} == true ]]; then
    # Line is a rule message
    messages+=("${line}")
    expecting_rule_message=false
  else
    # Line is a rule regex
    regexes+=("${line}")
    expecting_rule_message=true
  fi
done < "${rules_file}"

# Find violations
violations=''
for i in "${!regexes[@]}"; do
  matches="$(grep -EHInr "${regexes[$i]}" "${src_paths[@]}" | grep -Fv 'splinter:ignore' || true)"
  if [[ -n ${matches} ]]; then
    violations+="$(
      echo "${matches}" | cut -d: -f-2 | sed s$'\001''$'$'\001'":${messages[$i]}"$'\001'g
    )"$'\n'
  fi
done

# Print report and exit with error code if violations found
if [[ -n ${violations} ]]; then
  echo -n "${violations}" | sort -t: -k1,1 -k2,2n
  exit 1
fi
